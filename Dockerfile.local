FROM node:16.14.0-alpine AS base

LABEL authors = "test.test <test@test.ru>"
RUN apk add --no-cache python3 g++ gcc make

FROM base AS install
ENV NPM_CONFIG_LOGLEVEL error

WORKDIR /app

COPY package-lock.json ./package-lock.json
COPY package.json ./package.json
RUN npm ci

FROM base as source
WORKDIR /app

COPY src ./src
COPY tsconfig.json ./tsconfig.json
COPY tsconfig.build.json ./tsconfig.build.json

FROM source AS build
ENV NPM_CONFIG_LOGLEVEL error

WORKDIR /app

COPY --from=install /app/package-lock.json ./package-lock.json
COPY --from=install /app/package.json ./package.json
COPY --from=install /app/node_modules ./node_modules

RUN npm run build

FROM base as dev
ARG NODE_ENV=development
ENV NODE_ENV=${NODE_ENV}
ENV PATH /app/node_modules/.bin:$PATH

WORKDIR /app

COPY --from=install /app/package-lock.json ./package-lock.json
COPY --from=install /app/package.json ./package.json
COPY --from=install /app/node_modules ./node_modules
COPY --from=source /app/src ./src
COPY --from=source /app/tsconfig.build.json ./tsconfig.build.json
COPY --from=source /app/tsconfig.json ./tsconfig.json

CMD npm run start:dev

FROM base AS prod
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}
ENV PATH /app/node_modules/.bin:$PATH

WORKDIR /app

COPY --from=install /app/package.json ./package.json
COPY --from=build /app/build ./build
COPY --from=build /app/node_modules ./node_modules
RUN npm prune --production
CMD npm run start

